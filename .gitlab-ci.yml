stages:
  - test
  - build
  - deploy

variables:
  DATABASE_URL: "postgres://postgres:postgres@postgres:5432/test_db"
  SECRET_KEY: $SECRET_KEY
  SENTRY_DSN: $SENTRY_DSN
  DOCKER_IMAGE: $DOCKER_USERNAME/oc_lettings_site:$CI_COMMIT_SHA

services:
  - name: postgres:11
    alias: postgres

test:
  stage: test
  image: python:3.9
  script:
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install flake8 coverage pytest dj-database-url
    - flake8 .
    - coverage run -m pytest
    - coverage report
    - coverage xml
    - coverage report --fail-under=80
  artifacts:
    reports:
      junit: coverage.xml
    paths:
      - coverage.xml

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_IMAGE .
    - docker tag $DOCKER_IMAGE $DOCKER_USERNAME/oc_lettings_site:latest
    - docker push $DOCKER_IMAGE
    - docker push $DOCKER_USERNAME/oc_lettings_site:latest
  only:
    - master

deploy:
  stage: deploy
  script:
    - echo "Deployment to Render is handled by Render's GitHub/GitLab integration"
  only:
    - master
